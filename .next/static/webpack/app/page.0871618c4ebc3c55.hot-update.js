"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/app/services/api.ts":
/*!*********************************!*\
  !*** ./src/app/services/api.ts ***!
  \*********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getCharacterById: function() { return /* binding */ getCharacterById; },\n/* harmony export */   getCharacters: function() { return /* binding */ getCharacters; }\n/* harmony export */ });\nasync function getCharacters(category) {\n    const url = category ? \"/api/characters?category=\".concat(encodeURIComponent(category)) : \"/api/characters\";\n    console.log(\"Fetching characters from:\", url);\n    const response = await fetch(url, {\n        cache: \"no-store\",\n        headers: {\n            \"Cache-Control\": \"no-cache\"\n        }\n    });\n    if (!response.ok) {\n        console.error(\"API Error:\", response.status, response.statusText);\n        throw new Error(\"Failed to fetch characters\");\n    }\n    const data = await response.json();\n    console.log(\"API Response:\", data.length, \"characters\");\n    return data;\n}\nasync function getCharacterById(id) {\n    try {\n        const response = await fetch(\"/api/characters/\".concat(id));\n        if (!response.ok) {\n            if (response.status === 404) {\n                return null;\n            }\n            throw new Error(\"Failed to fetch character\");\n        }\n        return response.json();\n    } catch (error) {\n        console.error(\"Error fetching character:\", error);\n        throw error;\n    }\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9hcHAvc2VydmljZXMvYXBpLnRzIiwibWFwcGluZ3MiOiI7Ozs7O0FBRU8sZUFBZUEsY0FBY0MsUUFBaUI7SUFDbkQsTUFBTUMsTUFBTUQsV0FDUiw0QkFBeUQsT0FBN0JFLG1CQUFtQkYsYUFDL0M7SUFFSkcsUUFBUUMsR0FBRyxDQUFDLDZCQUE2Qkg7SUFDbkMsTUFBTUksV0FBVyxNQUFNQyxNQUFNTCxLQUFLO1FBQ3RDTSxPQUFPO1FBQ1BDLFNBQVM7WUFDUCxpQkFBaUI7UUFDbkI7SUFDRjtJQUNBLElBQUksQ0FBQ0gsU0FBU0ksRUFBRSxFQUFFO1FBQ2hCTixRQUFRTyxLQUFLLENBQUMsY0FBY0wsU0FBU00sTUFBTSxFQUFFTixTQUFTTyxVQUFVO1FBQ2hFLE1BQU0sSUFBSUMsTUFBTTtJQUNsQjtJQUNBLE1BQU1DLE9BQU8sTUFBTVQsU0FBU1UsSUFBSTtJQUNoQ1osUUFBUUMsR0FBRyxDQUFDLGlCQUFpQlUsS0FBS0UsTUFBTSxFQUFFO0lBQzFDLE9BQU9GO0FBQ1Q7QUFFTyxlQUFlRyxpQkFBaUJDLEVBQVU7SUFDL0MsSUFBSTtRQUNGLE1BQU1iLFdBQVcsTUFBTUMsTUFBTSxtQkFBc0IsT0FBSFk7UUFDaEQsSUFBSSxDQUFDYixTQUFTSSxFQUFFLEVBQUU7WUFDaEIsSUFBSUosU0FBU00sTUFBTSxLQUFLLEtBQUs7Z0JBQzNCLE9BQU87WUFDVDtZQUNBLE1BQU0sSUFBSUUsTUFBTTtRQUNsQjtRQUNBLE9BQU9SLFNBQVNVLElBQUk7SUFDdEIsRUFBRSxPQUFPTCxPQUFPO1FBQ2RQLFFBQVFPLEtBQUssQ0FBQyw2QkFBNkJBO1FBQzNDLE1BQU1BO0lBQ1I7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9zcmMvYXBwL3NlcnZpY2VzL2FwaS50cz82Yzg1Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENoYXJhY3RlciB9IGZyb20gJy4uL3R5cGVzL2NoYXJhY3Rlcic7XHJcblxyXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2V0Q2hhcmFjdGVycyhjYXRlZ29yeT86IHN0cmluZyk6IFByb21pc2U8Q2hhcmFjdGVyW10+IHtcclxuICBjb25zdCB1cmwgPSBjYXRlZ29yeSBcclxuICAgID8gYC9hcGkvY2hhcmFjdGVycz9jYXRlZ29yeT0ke2VuY29kZVVSSUNvbXBvbmVudChjYXRlZ29yeSl9YFxyXG4gICAgOiAnL2FwaS9jaGFyYWN0ZXJzJztcclxuICBcclxuICBjb25zb2xlLmxvZygnRmV0Y2hpbmcgY2hhcmFjdGVycyBmcm9tOicsIHVybCk7XHJcbiAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaCh1cmwsIHtcclxuICAgIGNhY2hlOiAnbm8tc3RvcmUnLFxyXG4gICAgaGVhZGVyczoge1xyXG4gICAgICAnQ2FjaGUtQ29udHJvbCc6ICduby1jYWNoZSdcclxuICAgIH1cclxuICB9KTtcclxuICBpZiAoIXJlc3BvbnNlLm9rKSB7XHJcbiAgICBjb25zb2xlLmVycm9yKCdBUEkgRXJyb3I6JywgcmVzcG9uc2Uuc3RhdHVzLCByZXNwb25zZS5zdGF0dXNUZXh0KTtcclxuICAgIHRocm93IG5ldyBFcnJvcignRmFpbGVkIHRvIGZldGNoIGNoYXJhY3RlcnMnKTtcclxuICB9XHJcbiAgY29uc3QgZGF0YSA9IGF3YWl0IHJlc3BvbnNlLmpzb24oKTtcclxuICBjb25zb2xlLmxvZygnQVBJIFJlc3BvbnNlOicsIGRhdGEubGVuZ3RoLCAnY2hhcmFjdGVycycpO1xyXG4gIHJldHVybiBkYXRhO1xyXG59XHJcblxyXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2V0Q2hhcmFjdGVyQnlJZChpZDogc3RyaW5nKTogUHJvbWlzZTxDaGFyYWN0ZXIgfCBudWxsPiB7XHJcbiAgdHJ5IHtcclxuICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2goYC9hcGkvY2hhcmFjdGVycy8ke2lkfWApO1xyXG4gICAgaWYgKCFyZXNwb25zZS5vaykge1xyXG4gICAgICBpZiAocmVzcG9uc2Uuc3RhdHVzID09PSA0MDQpIHtcclxuICAgICAgICByZXR1cm4gbnVsbDtcclxuICAgICAgfVxyXG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ0ZhaWxlZCB0byBmZXRjaCBjaGFyYWN0ZXInKTtcclxuICAgIH1cclxuICAgIHJldHVybiByZXNwb25zZS5qc29uKCk7XHJcbiAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIGZldGNoaW5nIGNoYXJhY3RlcjonLCBlcnJvcik7XHJcbiAgICB0aHJvdyBlcnJvcjtcclxuICB9XHJcbn0iXSwibmFtZXMiOlsiZ2V0Q2hhcmFjdGVycyIsImNhdGVnb3J5IiwidXJsIiwiZW5jb2RlVVJJQ29tcG9uZW50IiwiY29uc29sZSIsImxvZyIsInJlc3BvbnNlIiwiZmV0Y2giLCJjYWNoZSIsImhlYWRlcnMiLCJvayIsImVycm9yIiwic3RhdHVzIiwic3RhdHVzVGV4dCIsIkVycm9yIiwiZGF0YSIsImpzb24iLCJsZW5ndGgiLCJnZXRDaGFyYWN0ZXJCeUlkIiwiaWQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/app/services/api.ts\n"));

/***/ })

});